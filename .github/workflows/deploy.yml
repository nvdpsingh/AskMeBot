name: Deploy AskMeBot to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and test job
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx
        
    - name: Run tests
      run: |
        # Basic health check test
        python -c "
        import sys
        sys.path.append('.')
        from app.main import app
        print('‚úÖ FastAPI app imports successfully')
        "
        
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Check code formatting
      run: |
        pip install black
        black --check --diff .
        
    - name: Security check
      run: |
        pip install bandit
        bandit -r app/ -f json -o bandit-report.json || true
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          bandit-report.json
          
  # Deploy job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create deployment package
      run: |
        # Create a clean deployment directory
        mkdir -p deploy
        
        # Copy necessary files
        cp -r app deploy/
        cp -r static deploy/
        cp requirements.txt deploy/
        cp pyproject.toml deploy/
        cp README.md deploy/
        
        # Create a simple server script for GitHub Pages
        cat > deploy/server.py << 'EOF'
        import os
        import sys
        from pathlib import Path
        
        # Add the app directory to Python path
        sys.path.insert(0, str(Path(__file__).parent / 'app'))
        
        # Set environment variables for GitHub Pages
        os.environ.setdefault('GROQ_API_KEY', 'demo-key-for-github-pages')
        
        # Import and run the FastAPI app
        from app.main import app
        
        if __name__ == '__main__':
            import uvicorn
            uvicorn.run(app, host='0.0.0.0', port=8000)
        EOF
        
        # Create a simple HTML file that can work with GitHub Pages
        cat > deploy/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>AskMeBot - AI Chat Assistant</title>
            <style>
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
                    color: #e5e5e5;
                    margin: 0;
                    padding: 20px;
                    min-height: 100vh;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }
                .container {
                    text-align: center;
                    max-width: 600px;
                    padding: 40px;
                    background: rgba(0, 0, 0, 0.3);
                    border-radius: 20px;
                    border: 1px solid #ffd700;
                    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
                }
                .logo {
                    font-size: 3rem;
                    margin-bottom: 20px;
                    color: #ffd700;
                }
                h1 {
                    color: #ffd700;
                    margin-bottom: 20px;
                    font-size: 2.5rem;
                }
                p {
                    font-size: 1.2rem;
                    line-height: 1.6;
                    margin-bottom: 30px;
                }
                .btn {
                    display: inline-block;
                    padding: 15px 30px;
                    background: #ffd700;
                    color: #1a1a1a;
                    text-decoration: none;
                    border-radius: 10px;
                    font-weight: bold;
                    font-size: 1.1rem;
                    transition: all 0.3s ease;
                    margin: 10px;
                }
                .btn:hover {
                    background: #ffed4e;
                    transform: translateY(-2px);
                    box-shadow: 0 5px 15px rgba(255, 215, 0, 0.3);
                }
                .features {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                    gap: 20px;
                    margin-top: 40px;
                }
                .feature {
                    padding: 20px;
                    background: rgba(255, 215, 0, 0.1);
                    border-radius: 10px;
                    border: 1px solid rgba(255, 215, 0, 0.3);
                }
                .feature h3 {
                    color: #ffd700;
                    margin-bottom: 10px;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="logo">ü¶á</div>
                <h1>AskMeBot</h1>
                <p>AI-Powered Chat Assistant with FastAPI and Groq LLM</p>
                
                <a href="https://github.com/nvdpsingh/FastAPITut" class="btn">View on GitHub</a>
                <a href="https://github.com/nvdpsingh/FastAPITut#installation" class="btn">Get Started</a>
                
                <div class="features">
                    <div class="feature">
                        <h3>ü§ñ AI Chat</h3>
                        <p>Powered by Groq's fast LLM inference</p>
                    </div>
                    <div class="feature">
                        <h3>üí¨ Chat History</h3>
                        <p>Persistent chat management and organization</p>
                    </div>
                    <div class="feature">
                        <h3>üé® Modern UI</h3>
                        <p>Batman-themed responsive design</p>
                    </div>
                    <div class="feature">
                        <h3>‚ö° Fast API</h3>
                        <p>Built with FastAPI for high performance</p>
                    </div>
                </div>
                
                <p style="margin-top: 40px; font-size: 0.9rem; color: #888;">
                    This is a static preview. For the full interactive experience, 
                    <a href="https://github.com/nvdpsingh/FastAPITut#installation" style="color: #ffd700;">clone and run locally</a>.
                </p>
            </div>
        </body>
        </html>
        EOF
        
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: './deploy'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
      
  # Notification job
  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "‚úÖ Deployment successful! üöÄ"
          echo "üåê Live site: https://nvdpsingh.github.io/FastAPITut/"
        else
          echo "‚ùå Deployment failed!"
          exit 1
        fi
